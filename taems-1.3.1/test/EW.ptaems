;;;;;;;;;;;;
;; Input data
;;;;;;;;;;;;

#define AGENT = Agent_1

;#define SCAN = true
#define TRACK = true

#define SECTOR1 = true
#define SECTOR2 = true
#define SECTOR3 = true

;;;;;;;;;;;;
;; By default, sectors are not to be scanned
;;;;;;;;;;;;

#if (#ndef($SECTOR1) == true)
	#define SECTOR1 = false
#endif
#if (#ndef($SECTOR2) == true)
	#define SECTOR2 = false
#endif
#if (#ndef($SECTOR3) == true)
	#define SECTOR3 = false
#endif

;;;;;;;;;;;;
;; Generic outcomes
;;;;;;;;;;;;

#define INIT_OUT
  (outcomes
      (Outcome_1
         (density 1.0)
         (quality_distribution 10.0 1.0)
         (duration_distribution 10.0 1.0)
         (cost_distribution 10.0 1.0)
      )
   )
#enddefine

#define LO_OUT
  (outcomes
      (Outcome_1
         (density 1.0)
         (quality_distribution 10.0 1.0)
         (duration_distribution 10.0 1.0)
         (cost_distribution 10.0 1.0)
      )
   )
#enddefine

#define HI_OUT
  (outcomes
      (Outcome_1
         (density 1.0)
         (quality_distribution 10.0 1.0)
         (duration_distribution 10.0 1.0)
         (cost_distribution 10.0 1.0)
      )
   )
#enddefine

#define RET_OUT
  (outcomes
      (Outcome_1
         (density 1.0)
         (quality_distribution 10.0 1.0)
         (duration_distribution 10.0 1.0)
         (cost_distribution 10.0 1.0)
      )
   )
#enddefine

#define NL_OUT
  (outcomes
      (Outcome_1
         (density 1.0)
         (quality_distribution 10.0 1.0)
         (duration_distribution 10.0 1.0)
         (cost_distribution 10.0 1.0)
      )
   )
#enddefine

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Local scans
;;   SECTOR = number/name of sector to scan
;;   LO_OUT = outcome of lo quality scan
;;   HI_OUT = outcome of hi quality scan
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

#define SCAN_TASK
(spec_task
   (label Track_$SECTOR)
   (agent $AGENT)
   (subtasks Init_$SECTOR Query_$SECTOR Retrieve_$SECTOR)
   (qaf q_seq_sum)
)

(spec_method
   (label Init_$SECTOR)
   (agent $AGENT)
   $INIT_OUT
)

(spec_task
   (label Query_$SECTOR)
   (agent $AGENT)
   (subtasks Lo_$SECTOR Hi_$SECTOR)
   (qaf q_exactly_one)
)

#if ($TRACK == true)
(spec_facilitates
  (label Facilitates_$SECTOR)
  (agent $AGENT)

  (from Query_$SECTOR)
  (to Use_Current_Position)

  (quality_power 0.4 1.0)
  (duration_power 1.0 1.0)
  (cost_power 1.0 1.0)
)
#endif

(spec_method
   (label Lo_$SECTOR)
   (agent $AGENT)
   $LO_OUT
)

(spec_method
   (label Hi_$SECTOR)
   (agent $AGENT)
   $HI_OUT
)

(spec_method
   (label Retrieve_$SECTOR)
   (agent $AGENT)
   $RET_OUT
)
#enddefine

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Nonlocal scans
;;   NLAGENT = name of nonlocal agent
;;   NL_OUT = outcome of nonlocal task
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

#define NLSCAN_TASK
(spec_method
   (label #concat($NLAGENT, "_", "Track"))
   (agent $NLAGENT)
   $NL_OUT
   (nonlocal)
)

(spec_facilitates
   (label #concat($NLAGENT, "_", "Facilitates"))
   (agent $NLAGENT)

   (from #concat($NLAGENT, "_", "Track"))
   (to Use_Current_Position)

   (quality_power 0.4 1.0)
   (duration_power 1.0 1.0)
   (cost_power 1.0 1.0)
)
#enddefine

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Main Task Group
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(spec_agent
  (label $AGENT)
)

(spec_task_group
   (label Perform_Tasks)
   (agent $AGENT)
   (subtasks 
#if ($SCAN == true)
	Perform_Scan
#endif
#if ($TRACK == true)
	Generate_Track
#endif
   )
   (qaf q_sum)
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Scan stuff
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

#if ($SCAN == true)

#define SUBTASKS = ""
#if ($SECTOR1 == true) 
	#define SECTOR = 1
	#definenow SUBTASKS = #concat($SUBTASKS, #space(), "Track_", $SECTOR)
	$SCAN_TASK
#endif
#if ($SECTOR2 == true) 
	#define SECTOR = 2
	#definenow SUBTASKS = #concat($SUBTASKS, #space(), "Track_", $SECTOR)
	$SCAN_TASK
#endif
#if ($SECTOR3 == true) 
	#define SECTOR = 3
	#definenow SUBTASKS = #concat($SUBTASKS, #space(), "Track_", $SECTOR)
	$SCAN_TASK
#endif

(spec_task
   (label Perform_Scan)
   (agent $AGENT)
   (subtasks $SUBTASKS)
   (qaf q_sum)
)

#endif

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Generate stuff
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

#if ($TRACK == true)

(spec_task
   (label Generate_Track)
   (agent $AGENT)
   (subtasks Use_Prior_Track Use_Current_Position)
   (qaf q_sum)
)

(spec_method
   (label Use_Prior_Track)
   (agent $AGENT)
   $RET_OUT
)

(spec_method
   (label Use_Current_Position)
   (agent $AGENT)
   $RET_OUT
)

#define NLAGENT = "Jack"
$NLSCAN_TASK

#define NLAGENT = "Jill"
$NLSCAN_TASK

#define NLAGENT = "Bob"
$NLSCAN_TASK

#endif
